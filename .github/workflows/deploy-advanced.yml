name: Advanced Deploy to Surge.sh

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔍 Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🧪 Run linting (if available)
      run: npm run lint --if-present
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 📂 List build artifacts
      run: |
        echo "Build completed successfully!"
        ls -la dist/
        du -sh dist/
        
    - name: ⬆️ Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: dist/
        retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://difficult-bell.surge.sh
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: dist/
        
    - name: 📦 Install Surge CLI
      run: npm install -g surge
      
    - name: 🚀 Deploy to Surge.sh
      run: |
        echo "Deploying to production..."
        surge dist/ difficult-bell.surge.sh --token $SURGE_TOKEN
      env:
        SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        
    - name: ✅ Deployment success
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "🌐 Site URL: https://difficult-bell.surge.sh"
        
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    environment:
      name: staging
      url: https://staging-difficult-bell.surge.sh
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: dist/
        
    - name: 📦 Install Surge CLI
      run: npm install -g surge
      
    - name: 🚀 Deploy to Staging
      run: |
        echo "Deploying to staging..."
        surge dist/ staging-difficult-bell.surge.sh --token $SURGE_TOKEN
      env:
        SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        
    - name: ✅ Staging deployment success
      run: |
        echo "🎉 Staging deployment completed successfully!"
        echo "🌐 Staging URL: https://staging-difficult-bell.surge.sh"
